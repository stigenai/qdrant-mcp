name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run linting
      run: |
        pip install black flake8 mypy
        black --check .
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # mypy . --ignore-missing-imports
    
    - name: Run tests with coverage
      run: |
        pytest --cov=. --cov-report=xml --cov-report=html --cov-report=term
    
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  docker:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      run: |
        docker build -t qdrant-mcp:test .
    
    - name: Test Docker image
      run: |
        # Start the container
        docker run -d --name qdrant-mcp-test -p 6333:6333 -p 8000:8000 -p 8001:8001 qdrant-mcp:test
        
        # Wait for services to start
        sleep 30
        
        # Test Qdrant is running
        curl -f http://localhost:6333/health || exit 1
        
        # Test REST API is running
        curl -f http://localhost:8000/health || exit 1
        
        # Test MCP server is running
        curl -f -X POST http://localhost:8001/ \
          -H "Content-Type: application/json" \
          -d '{"jsonrpc":"2.0","method":"tools/list","params":{},"id":"1"}' || exit 1
        
        # Stop and remove container
        docker stop qdrant-mcp-test
        docker rm qdrant-mcp-test