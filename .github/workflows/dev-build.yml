name: Development Build

on:
  push:
    branches:
      - develop
      - 'feature/**'
      - 'fix/**'
  pull_request:
    types: [opened, synchronize, reopened]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: stigenai/qdrant-mcp

jobs:
  dev-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch,suffix=-dev
            type=ref,event=pr,prefix=pr-
            type=sha,prefix=dev-

      - name: Build development Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.dev
          platforms: linux/amd64
          push: false
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test container startup
        run: |
          # Start container in background
          docker run -d --name test-container \
            -p 8000:8000 -p 8001:8001 -p 6333:6333 \
            ${{ fromJSON(steps.meta.outputs.json).tags[0] }}
          
          # Wait for services to start
          echo "Waiting for services to start..."
          sleep 30
          
          # Check health endpoints
          curl -f http://localhost:8000/health || exit 1
          curl -f http://localhost:6333/health || exit 1
          
          # Check logs
          docker logs test-container
          
          # Clean up
          docker stop test-container
          docker rm test-container

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const tags = ${{ steps.meta.outputs.json }}.tags;
            const tag = tags[0].replace('ghcr.io/stigenai/qdrant-mcp:', '');
            const body = `## üê≥ Development Build Successful
            
            The development Docker image has been built successfully!
            
            **Image Tag:** \`${tag}\`
            
            To test locally:
            \`\`\`bash
            docker run -p 8000:8000 -p 8001:8001 -p 6333:6333 \\
              ${tags[0]}
            \`\`\`
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });